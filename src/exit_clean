#!/bin/sh
# Author:     MyHR, Andy <andy.myhr@metlife.com>
# Contact:    awmyhr <awmyhr@gmail.com>
# Project:    Shell Functions
# Proj Home:  https://github.com/awmyhr/shell-functions
# Copyright:  2019 awmyhr
# License:    Apache-2.0
# Revised:    2019-06-28 # This revision is for the test-suite portion
# Created:    2019-06-28
##--==
#==============================================================================
exit_clean() {
    #:"""
    #: .. function:: exit_clean()
    #:
    #: .. project:: Shell Functions <https://github.com/awmyhr/shell-functions>
    #:
    #: .. revision:: 2019-06-28
    #:
    #: Clean up everything and exit gracefully
    #: .. warning::
    #:     This function exits the script
    #:"""
    #-- Expected globals ------------------------------------------------------
    __logger_dsf__="${__logger_dsf__:="+%Y%m%d"}"
    __logger_file__="${__logger_file__:=unknown}"
    __logger_file_set__=${__logger_file_set__:='false'}
    __script_debug__=${__script_debug__:='false'}
    #--------------------------------------------------------------------------
    [ "${__script_debug__}" = true ] && {
        set +o xtrace
        logger debug '-----------------'
        logger debug '------ end ------'
        logger debug '-----------------'
        __script_debug__=false
    }

    trap - INT TERM HUP
    if [ "${__logger_file_set__}" = "true" ]; then
        printf '%s [EXIT]: Script finished.\n' "$(timestamp "${__logger_dsf__}")" 1>&3
        printf 'Log file created: %s\n' "${__logger_file__}"
        exec 3>&-
    fi
    exit 0

    return
}
##==---
#==============================================================================
if ! (return 0 2>/dev/null) ; then
    if [ "${RUN_UNIT_TEST}" = 'true' ] || ! declare -f logger >/dev/null 2>&1 ; then
        logger() {
            printf '%s %s\n' "${1}" "${2}"
        }
        timestamp() {
            printf '%s' "${1}"
        }
        exec 3>&1 || exit 1
    fi
    if [ "${1}" = debug ] ; then
        __script_debug__='true'
    fi
    exit_clean "${@}"
fi
